@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@model VacationContractUpdateDto

@{
    Layout = null;
}

<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs mb-3 tabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" data-toggle="tab"
                   href="#home1" role="tab">Müqavilə məlumatları</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab"
                   href="#file1" role="tab">Fayllar</a>
            </li>
        </ul>
        <form asp-action="Update" class="main-signin-form" enctype="multipart/form-data">
            <div class="tab-content tabs">
                <div class="tab-pane active" id="home1"
                     role="tabpanel">
                    <input type="hidden" asp-for="Id" />
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="floatLabel">  Şirkət: </label>
                                <select name="select" disabled id="CompanyId" class="form-control">
                                    <option>@ViewBag.company.Name</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="floatLabel">  Əməkdaşlar: </label>
                                <select name="select" asp-for="UserId" name="UserId" readonly class="form-control disabled_custom">
                                    <option value="" disabled selected hidden>Seçim edin</option>
                                    @foreach (var item in ViewBag.users)
                                    {
                                        <option value="@item.Id">
                                            @(item.Name) @(item.Surname) / @(item.Position.Company.Name!=null? item.Position.Company.Name:"Təyin edilməyib")/ @(item.Position.Department.Name!=null? item.Position.Department.Name:"Təyin edilməyib")/ @(item.Position.Name!=null? item.Position.Name:"Təyin edilməyib")
                                        </option>
                                    }
                                </select>
                                <span asp-validation-for="UserId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6" id="graphic_div">
                            <div class="form-group">
                                <label class="floatLabel"> Məzuniyyət növü: </label>
                                <select asp-for="VacationTypeId" readonly class="form-control disabled_custom">
                                    <option value="" disabled selected hidden>Seçim edin</option>
                                    @foreach (var item in ViewBag.vacationTypes)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="VacationTypeId" class="text-danger"></span>
                            </div>

                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="floatLabel"> Sənəd nömrəsi: </label>
                                <input type="text" class="form-control" asp-for="CommandNumber" autocomplete="off">
                                <span asp-validation-for="CommandNumber" class="text-danger"></span>
                                <span class="messages"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <label class="floatLabel"> Sənəd tarixi: </label>
                            <div class="form-group">
                                <input asp-for="CommandDate" type="text" class="form-control custom-date" id="inputDate">
                                <span asp-validation-for="CommandDate" class="text-danger"></span>
                                <span class="messages"></span>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="floatLabel">  Əmrin əsası: </label>
                                <textarea class="form-control" asp-for="Description" autocomplete="off"></textarea>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="floatLabel"> Məz. başlama tarixi: </label>
                                <div class="form-group">
                                    <input asp-for="FromDate" type="text" class="form-control custom-date" id="FromDate">
                                    <span asp-validation-for="FromDate" class="text-danger"></span>
                                    <span class="messages"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="floatLabel">  Məz. bitmə tarixi: </label>
                                <div class="form-group">
                                    <input asp-for="ToDate" type="text" class="form-control custom-date" id="ToDate">
                                    <span asp-validation-for="ToDate" class="text-danger"></span>
                                    <span class="messages"></span>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <label class="floatLabel"> Təqvim günü: </label>
                            <div class="form-group">
                                <input asp-for="CalendarDay" type="number" readonly class="form-control disabled_custom">
                            </div>
                        </div>
                    </div>
                    <div id="labor_vacation" class="row">
                        <h6 class="ml-3 mb-3"> İl aralığı: </h6>
                    </div>
                    <div id="labor_vacation_2" class="">

                        @for (var i = 0; i < Model.VacationContractDates.Count; i++)
                        {


                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="floatLabel"> Tarix: </label>

                                        <div class="input-group input-daterange mb-0">
                                            <input type="text" maxlength=10 asp-for="VacationContractDates[i].FromDate" class="form-control vacation-remain start old" autocomplete="off">
                                            <span class="input-group-addon">to</span>
                                            <input type="text" maxlength=10 asp-for="VacationContractDates[i].ToDate" class="form-control vacation-remain end old" autocomplete="off">
                                        </div>

                                        <span asp-validation-for="VacationContractDates[i].ToDate" class="text-danger"></span>
                                        <span asp-validation-for="VacationContractDates[i].FromDate" class="text-danger"></span>
                                        <span class="messages"></span>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="floatLabel">  Gün: </label>
                                        <input type="text" class="form-control" asp-for="VacationContractDates[i].CalendarDay" autocomplete="off">

                                        <span class="messages"></span>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <div id="vac-box">
                                <input id="vacCount" type="hidden" value="@Model.VacationContractDates.Count" />
                            </div>
                            <div class="row">
                                <div class="col-12 text-right">
                                    Əlavə et: <button type="button" id="addDateRange" class="btn btn-outline-success " data-bs-toggle="tooltip" data-bs-placement="top" title="Məzuniyyət qalığı"><i class="icofont icofont-plus m-0"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="tab-pane" id="file1" role="tabpanel">
                    @foreach (var el in ViewBag.contractFiles)
                    {
                        <a class="pl-4" target="_blank" href="~/contractDocs/@el.FilePath">
                            <i class="fa fa-download" aria-hidden="true" style="color: #404E67"></i>
                            @el.Clause.Name
                        </a> <br /> <br />
                    }
                </div>
                <input id="StartWorkDate" type="hidden" value="@ViewBag.StartWorkDate" />
                <div class="form-group row mt-3">
                    <div class="col-sm-12 d-flex justify-content-between">
                        <button type="submit" id="sub-btn" class="btn btn-dark-blue m-b-0  btn-block">
                            Təsdiqlə
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@await Html.PartialAsync("_ValidationScriptsPartial")

<script>
    $(document).ready(function() {

         $('.custom-date').each(function() {
            $(this).datepicker({
                format: "dd.mm.yyyy"
            })
        })

        var vac_id = $("#VacationTypeId").val();
        getVacationTypeDisplay(vac_id, false);
        $("#labor_vacation").css('display', "none");
        $("#labor_vacation_2").css('display', "none");

        $('.input-daterange input').each(function() {
            $(this).datepicker({
                format: "dd.mm.yyyy"
            });
        });

        $("form").submit(function(e) {
            if (!checkDate()) {
                e.preventDefault();
                return;
            }
        });

        function checkDate() {
            setDisableAndOld();
            let startYear;
            let valid = true;
            $(".vacation-remain").each(function(i, el) {
                let startWorkDate = $('#StartWorkDate').val();
                startWorkDate = new Date(startWorkDate.split('.')[2], startWorkDate.split('.')[1]-1, startWorkDate.split('.')[0]);
                //startWorkDate = new Date(startWorkDate);
                startWorkDate.setHours(0, 0, 0, 0);
                let startWorkMonth = startWorkDate.getMonth() + 1;
                let startWorkDay = startWorkDate.getDate();
                let val = $(el).val();
                val = new Date(val.split('.')[2], val.split('.')[1]-1, val.split('.')[0]);
                //val = new Date(val);
                val.setHours(0, 0, 0, 0);
                let startMonth = val.getMonth() + 1;
                let startDay = val.getDate();
                let year = val.getFullYear();
                if (el.classList.contains('disable')) {
                    val = new Date(year, startDay - 1, startMonth);
                    startMonth = val.getMonth() + 1;
                    startDay = val.getDate();
                }
                else if (el.classList.contains('new')) {
                    if (el.classList.contains('start') && startWorkDate > val) {
                        toastr.error(" Məzuniyyət aralığının başlama tarixi işə başlama tarixindən kiçik ola bilməz !", "Xəta!");
                        valid = false;
                        return valid;
                    }
                    if (i % 2 == 1) {
                        if (year - startYear != 1) {
                            toastr.error(" Aralıq 1 il olmalıdır !", "Xəta!");
                            valid = false;
                            return valid;
                        }
                    }
                    else {
                        startYear = year;
                    }
                    if (startMonth != startWorkMonth || startDay != startWorkDay) {
                        console.log(startMonth + " - " + startWorkMonth);
                        console.log(startDay + " - " + startWorkDay);
                        toastr.error(" Ay və gün işə başlama tarixindəki ilə eyni olmalıdı !", "Xəta!");
                        valid = false;
                        return valid;
                    }
                    if (valid && val && i % 2 == 0) {
                        if (dateArray.some(x => new Date(x).getTime() == new Date(val).getTime())) {
                            toastr.error(" Tarix artıq mövcuddur !", "Xəta!");
                            valid = false;
                            return valid;
                        }
                        else {
                            dateArray.push(val)
                        }
                    }
                }
            });
            return valid;
        }

        function setDisableAndOld() {
            dateArray = [];
            setDate('disable');
            setDate('old');
        }

        function checkRemainCount(e) {
            let isEmpty = false;
            $(".remain-count").each(function(i, el) {
                let val = $(el).val();
                if (!val) {
                    isEmpty = true;
                }
            });
            if (isEmpty) {
                toastr.error(" Gün boş ola bilməz !", "Xəta!");
                e.preventDefault();
                return isEmpty;
            }
        }

        function setDate(type) {
            $(`.vacation-remain.${type}`).each(function(i, el) {
                let val = $(el).val();
                val = new Date(val);
                val.setHours(0, 0, 0, 0);
                let startMonth = val.getMonth() + 1;
                let startDay = val.getDate();
                let year = val.getFullYear();
                if (type == 'disable') {
                    val = new Date(year, startDay - 1, startMonth);
                }
                startMonth = val.getMonth() + 1;
                startDay = val.getDate();
                if (i % 2 == 0) {
                    dateArray.push(val);
                }
            })
        }

        $("#addDateRange").click(function(e) {
            if (!checkDate() || checkRemainCount(e)) {
                return;
            }
            let rowCount = parseInt($("#vacCount").val());
            rowCount++;
            $("#vacCount").val(rowCount);
            let html = `<div class="row">
                                <div class="col-sm-5" >
                                    <div class="form-group">
                                        <label class="floatLabel"> Tarix: </label>
                                        <div class="input-group input-daterange mb-0">
                                            <input type="text" maxlength=10 name="VacationContractDates[${rowCount - 1}].FromDate" class="form-control vacation-remain start new" autocomplete="off">
                                        <div class="input-group-addon">to</div>
                                            <input type="text" maxlength=10 name="VacationContractDates[${rowCount - 1}].ToDate" class="form-control vacation-remain end new" autocomplete="off">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-5">
                                    <div class="form-group">
                                        <label class="floatLabel"> Gün: </label>
                                        <input type="number" class="form-control remain-count" name="VacationContractDates[${rowCount - 1}].CalendarDay" autocomplete="off">
                                    </div>
                                </div>
                                 <div class="col-sm-2 text-right">
                                     Sil: <button type="button" class="btn btn-outline-danger  removeVacDay" data-bs-toggle="tooltip" data-bs-placement="top" title="Məzuniyyət qalığı"><i class="icofont icofont-close m-0"></i></button>
                                </div>
                            </div>`;
            $('#vac-box').append(html);

            $('.input-daterange').datepicker({
                format: "dd.mm.yyyy"
            });
            removeDay();
        });

        function removeDay() {
            $('.removeVacDay').click(function() {
                $(this).parent().parent().remove();
            })
        }

        $('#FromDate').change(function() {
            var date = $(this).val();
            date = new Date(date.split('.')[2], date.split('.')[1]-1, date.split('.')[0]);
            $("#CalendarDay").val("0");
            var to_date = $("#ToDate").val();
             to_date = new Date(to_date.split('.')[2], to_date.split('.')[1]-1, to_date.split('.')[0]);
            if (date != null && date != "" && to_date != null && to_date != "") {
                var diff = to_date.getTime() - date.getTime();
                var days = diff / 1000 / 60 / 60 / 24;
                days += 1;

                $("#CalendarDay").val(days.toString());
            }
        });

        $('#ToDate').change(function() {
            var to_date = $(this).val();
            to_date = new Date(to_date.split('.')[2], to_date.split('.')[1]-1, to_date.split('.')[0]);
            $("#CalendarDay").val("0");
            var date = $("#FromDate").val();
            date = new Date(date.split('.')[2], date.split('.')[1]-1, date.split('.')[0]);
            if (date != null && date != "" && to_date != null && to_date != "") {
                var diff = to_date.getTime() - date.getTime();
                var days = diff / 1000 / 60 / 60 / 24;
                days += 1;
                $("#CalendarDay").val(days.toString());

            }
        });
    });



    $(document).on('change', '#VacationTypeId', function() {
        var _id = $(this).val();
        getVacationTypeDisplay(_id, true);

    });

    function getVacationTypeDisplay(vac_id, remain_check) {
        $.ajax({
            type: 'Get',
            url: '@Url.ActionLink("GetUserVacationType", "VacationContract")',
            data: {
                id: vac_id,
            },
            success: function(response) {
                if (response.error == true) {
                    toastr.error(response.message, "Xəta baş verdi!");
                    return;
                }

                if (response == "labor") {
                    $("#labor_vacation").css('display', "block");
                    $("#labor_vacation_2").css('display', "block");

                    if (remain_check) {
                        var date = $("#FromDate").val();
                        var to_date = $("#ToDate").val();
                        date = new Date(date.split('.')[2], date.split('.')[1]-1, date.split('.')[0]);
                        to_date = new Date(to_date.split('.')[2], to_date.split('.')[1]-1, to_date.split('.')[0]);
                        if (date != null && date != "" && to_date != null && to_date != "") {
                          var diff = to_date.getTime() - date.getTime();
                            var days = diff / 1000 / 60 / 60 / 24;
                            days += 1;
                            $("#CalendarDay").val(days.toString());
                        }
                    }

                } else {
                    $("#labor_vacation").css('display', "none");
                    $("#labor_vacation_2").css('display', "none");
                }

            },
            error: function(response) {
                $("#overlay").fadeOut(300);
                toastr.error("Gözlənilməz xəta baş verdi", "Xəta!");
            }
        });
    }



    function getPos(_id) {
        $.ajax({
            type: 'Get',
            url: '@Url.ActionLink("GetPositionWithUser", "Account")',
            data: {
                userId: _id,
            },
            success: function(response) {
                if (response.error == true) {
                    toastr.error(response.message, "Xəta baş verdi!");
                    return;
                }
                $("#PositionId").empty();
                var html = "";

                for (var i in response) {
                    html += `<option value="${[response[i].id]}">
                            ${[response[i].name]}</option>`
                }

                if (response.length > 0) {
                    $("#PositionId").prop('disabled', false);
                    $("#PositionId").html(`<option value="" disabled selected hidden>Seçim edin</option>` + html);
                }
                else {
                    $("#PositionId").prop('disabled', false);
                    $("#PositionId").html(`<option value="" disabled selected hidden>Yoxdur!</option>`);
                }

            },
            error: function(response) {
                $("#overlay").fadeOut(300);
                toastr.error("Gözlənilməz xəta baş verdi", "Xəta!");
            }
        });
    }

    $(document).on('change', '#CompanyId', function() {
        var _id = $(this).val();

        $.ajax({
            type: 'Get',
            url: '@Url.ActionLink("GetCompanyUsers", "Account")',
            data: {
                companyId: _id,
            },
            success: function(response) {
                if (response.error == true) {
                    toastr.error(response.message, "Xəta baş verdi!");
                    return;
                }
                $("#UserId").empty();
                var html = "";

                for (var i in response) {
                    html += `<option value="${[response[i].id]}">
                        ${[response[i].name]}</option>`
                }

                if (response.length > 0) {
                    $("#UserId").prop('disabled', false);
                    $("#UserId").html(`<option value="" disabled selected hidden>Seçim edin</option>` + html);
                }
                else {
                    $("#UserId").prop('disabled', false);
                    $("#UserId").html(`<option value="" disabled selected hidden>Yoxdur!</option>`);
                }

            },
            error: function(response) {
                $("#overlay").fadeOut(300);
                toastr.error("Gözlənilməz xəta baş verdi", "Xəta!");
            }
        });
    });
</script>